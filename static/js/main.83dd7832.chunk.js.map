{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","placeholder","TextForm","useState","text","setText","class","rows","value","onChange","event","target","onClick","newText","toUpperCase","toLowerCase","split","length","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKAIe,SAASA,EAAOC,GAC3B,OACI,mCACA,qBAAKC,UAAU,8CAAf,SACA,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SACGF,EAAMG,QAET,wBACEF,UAAU,iBACVG,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAMR,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BS,GAAG,yBAA7C,UACE,qBAAIT,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkBU,eAAa,OAAOT,KAAK,IAAxD,oBAIF,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,SACGF,EAAMY,aAIb,uBAAMX,UAAU,SAAhB,UACE,uBACEA,UAAU,oBACVG,KAAK,SACLS,YAAY,SACZJ,aAAW,WAEb,wBAAQR,UAAU,0BAA0BG,KAAK,SAAjD,iCCzCC,SAASU,IAEpB,IAF+B,EAmBTC,mBAAS,IAnBA,mBAmB1BC,EAnB0B,KAmBpBC,EAnBoB,KAqBjC,OACI,qCACF,sBAAKhB,UAAU,OAAf,UACI,6CACF,0BACEiB,MAAM,eACNL,YAAY,YACZH,GAAG,QACHS,KAAK,IACLC,MAAOJ,EACPK,SAhBmB,SAACC,GAEpBL,EAAQK,EAAMC,OAAOH,UAgBvB,uBACA,wBAAQI,QAhCY,WAClB,IAAIC,EAAUT,EAAKU,cACnBT,EAAQQ,IA8BuBxB,UAAU,uBAA3C,mBACA,wBAAQuB,QA7BY,WAClB,IAAIC,EAAUT,EAAKW,cACnBV,EAAQQ,IA2BuBxB,UAAU,uBAA3C,mBACA,wBAAQuB,QA1Be,WAErBP,EAAQ,KAwB0BhB,UAAU,sBAA9C,sBAEF,sBAAKA,UAAU,OAAf,UACI,8CACA,8BAAIe,EAAKY,MAAM,KAAKC,OAApB,cAAuCb,EAAKa,OAA5C,iBACA,8BAAI,KAAMb,EAAKY,MAAM,KAAKC,OAA1B,mBACA,yCACA,4BAAIb,UDeZjB,EAAO+B,aAAe,CAClB3B,MAAO,KACPS,MAAO,ME/CImB,MAXf,WACE,OACE,qCAEE,cAAChC,EAAD,CAAQI,MAAM,aAAaS,MAAM,aACjC,cAACE,EAAD,QCGSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.83dd7832.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport default function Navbar(props) {\n    return (\n        <>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">\n            {props.title}\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\n                  Home\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/\">\n                  {props.about}\n                </a>\n              </li>\n            </ul>\n            <form className=\"d-flex\">\n              <input\n                className=\"form-control me-2\"\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n              />\n              <button className=\"btn btn-outline-success\" type=\"submit\">\n                Search\n              </button>\n            </form>\n          </div>\n        </div>\n      </nav>\n        </>\n    )\n}\n\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    about: PropTypes.string\n}\n\nNavbar.defaultProps = {\n    title: \"Hi\",\n    about: \"Ab\"\n}","import React, { useState } from \"react\";\n\nexport default function TextForm() {\n\n    const handleUpClick = () => {\n        let newText = text.toUpperCase()\n        setText(newText)\n    }\n    const handleLoClick = () => {\n        let newText = text.toLowerCase()\n        setText(newText)\n    }\n    const handleClearClick = () => {\n        \n        setText(\"\")\n    }\n  \n    const handleOnChange = (event) => {\n       \n        setText(event.target.value)\n    }\n  const [text, setText] = useState(\"\");\n  \n  return (\n      <>\n    <div className=\"my-3\">\n        <h1> Enter Text</h1>\n      <textarea\n        class=\"form-control\"\n        placeholder=\"Text here\"\n        id=\"myBox\"\n        rows=\"8\"\n        value={text}\n        onChange={handleOnChange}\n      ></textarea>\n      <br />\n      <button onClick= {handleUpClick} className=\"btn btn-primary mx-2\">Upper</button>\n      <button onClick= {handleLoClick} className=\"btn btn-success mx-2\">Lower</button>\n      <button onClick= {handleClearClick} className=\"btn btn-danger mx-2\">Clear</button>\n    </div>\n    <div className=\"my-3\">\n        <h1>Text summary</h1>\n        <p>{text.split(' ').length} words and {text.length} characters</p>\n        <p>{0.008*text.split(' ').length} Minutes read</p>\n        <h3>Preview</h3>\n        <p>{text}</p>\n    </div>\n    </>\n  );\n}\n","import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nfunction App() {\n  return (\n    <>\n      \n      <Navbar title=\"Text-Utils\" about='About us'/>\n      <TextForm></TextForm>\n      {/* <About/> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}